{
	"id": "ccbc8abe6667cbd757b9682e2b2253e0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"wtfSolidity/101/101_15/err.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nerror SetNotOwner(); // 自定义error\r\n// error TransferNotOwner(address sender); // 自定义的带参数的error\r\n\r\ncontract ErrTest {\r\n    address public owner;\r\n\r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // 推荐error，节省gas\r\n    function setNewOwner(address addr) public {\r\n        if(owner != msg.sender) {\r\n            revert SetNotOwner();\r\n        }\r\n\r\n        owner = addr;\r\n    }\r\n\r\n    function setNewOwner1(address addr) public {\r\n        require(owner == msg.sender, \"Set new owner failed, current not is owner\");\r\n\r\n        owner = addr;\r\n    }\r\n\r\n    function setNewOwner2(address addr) public {\r\n        assert(owner == msg.sender);\r\n\r\n        owner = addr;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"wtfSolidity/101/101_15/err.sol": {
				"ErrTest": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "SetNotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "setNewOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "setNewOwner1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "setNewOwner2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"wtfSolidity/101/101_15/err.sol\":179:772  contract ErrTest {... */\n  mstore(0x40, 0x80)\n    /* \"wtfSolidity/101/101_15/err.sol\":232:282  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"wtfSolidity/101/101_15/err.sol\":264:274  msg.sender */\n  caller\n    /* \"wtfSolidity/101/101_15/err.sol\":256:261  owner */\n  0x00\n  dup1\n    /* \"wtfSolidity/101/101_15/err.sol\":256:274  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"wtfSolidity/101/101_15/err.sol\":179:772  contract ErrTest {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"wtfSolidity/101/101_15/err.sol\":179:772  contract ErrTest {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x78320aca\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf5a1f5b4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf5af5f95\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"wtfSolidity/101/101_15/err.sol\":486:647  function setNewOwner1(address addr) public {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"wtfSolidity/101/101_15/err.sol\":203:223  address public owner */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wtfSolidity/101/101_15/err.sol\":322:478  function setNewOwner(address addr) public {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"wtfSolidity/101/101_15/err.sol\":655:769  function setNewOwner2(address addr) public {... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"wtfSolidity/101/101_15/err.sol\":486:647  function setNewOwner1(address addr) public {... */\n    tag_10:\n        /* \"wtfSolidity/101/101_15/err.sol\":557:567  msg.sender */\n      caller\n        /* \"wtfSolidity/101/101_15/err.sol\":548:567  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wtfSolidity/101/101_15/err.sol\":548:553  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wtfSolidity/101/101_15/err.sol\":548:567  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wtfSolidity/101/101_15/err.sol\":540:614  require(owner == msg.sender, \"Set new owner failed, current not is owner\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"wtfSolidity/101/101_15/err.sol\":635:639  addr */\n      dup1\n        /* \"wtfSolidity/101/101_15/err.sol\":627:632  owner */\n      0x00\n      dup1\n        /* \"wtfSolidity/101/101_15/err.sol\":627:639  owner = addr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"wtfSolidity/101/101_15/err.sol\":486:647  function setNewOwner1(address addr) public {... */\n      pop\n      jump\t// out\n        /* \"wtfSolidity/101/101_15/err.sol\":203:223  address public owner */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"wtfSolidity/101/101_15/err.sol\":322:478  function setNewOwner(address addr) public {... */\n    tag_17:\n        /* \"wtfSolidity/101/101_15/err.sol\":387:397  msg.sender */\n      caller\n        /* \"wtfSolidity/101/101_15/err.sol\":378:397  owner != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wtfSolidity/101/101_15/err.sol\":378:383  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wtfSolidity/101/101_15/err.sol\":378:397  owner != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wtfSolidity/101/101_15/err.sol\":375:446  if(owner != msg.sender) {... */\n      tag_26\n      jumpi\n        /* \"wtfSolidity/101/101_15/err.sol\":421:434  SetNotOwner() */\n      mload(0x40)\n      0xade643ad00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"wtfSolidity/101/101_15/err.sol\":375:446  if(owner != msg.sender) {... */\n    tag_26:\n        /* \"wtfSolidity/101/101_15/err.sol\":466:470  addr */\n      dup1\n        /* \"wtfSolidity/101/101_15/err.sol\":458:463  owner */\n      0x00\n      dup1\n        /* \"wtfSolidity/101/101_15/err.sol\":458:470  owner = addr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"wtfSolidity/101/101_15/err.sol\":322:478  function setNewOwner(address addr) public {... */\n      pop\n      jump\t// out\n        /* \"wtfSolidity/101/101_15/err.sol\":655:769  function setNewOwner2(address addr) public {... */\n    tag_20:\n        /* \"wtfSolidity/101/101_15/err.sol\":725:735  msg.sender */\n      caller\n        /* \"wtfSolidity/101/101_15/err.sol\":716:735  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wtfSolidity/101/101_15/err.sol\":716:721  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wtfSolidity/101/101_15/err.sol\":716:735  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wtfSolidity/101/101_15/err.sol\":709:736  assert(owner == msg.sender) */\n      tag_28\n      jumpi\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n    tag_28:\n        /* \"wtfSolidity/101/101_15/err.sol\":757:761  addr */\n      dup1\n        /* \"wtfSolidity/101/101_15/err.sol\":749:754  owner */\n      0x00\n      dup1\n        /* \"wtfSolidity/101/101_15/err.sol\":749:761  owner = addr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"wtfSolidity/101/101_15/err.sol\":655:769  function setNewOwner2(address addr) public {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_32:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_34:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_35:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_48\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_34\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_36:\n        /* \"#utility.yul\":641:665   */\n      tag_50\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_35\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_51:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_37:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_53\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_36\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_56\n      tag_32\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":917:1036   */\n    tag_55:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_57\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_37\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_38:\n        /* \"#utility.yul\":1263:1287   */\n      tag_59\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_35\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_14:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_61\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_38\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_39:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1932   */\n    tag_40:\n        /* \"#utility.yul\":1843:1877   */\n      0x536574206e6577206f776e6572206661696c65642c2063757272656e74206e6f\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1912:1924   */\n      0x74206973206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"#utility.yul\":1899:1905   */\n      dup3\n        /* \"#utility.yul\":1895:1910   */\n      add\n        /* \"#utility.yul\":1888:1925   */\n      mstore\n        /* \"#utility.yul\":1703:1932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1938:2304   */\n    tag_41:\n        /* \"#utility.yul\":2080:2083   */\n      0x00\n        /* \"#utility.yul\":2101:2168   */\n      tag_65\n        /* \"#utility.yul\":2165:2167   */\n      0x2a\n        /* \"#utility.yul\":2160:2163   */\n      dup4\n        /* \"#utility.yul\":2101:2168   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2094:2168   */\n      swap2\n      pop\n        /* \"#utility.yul\":2177:2270   */\n      tag_66\n        /* \"#utility.yul\":2266:2269   */\n      dup3\n        /* \"#utility.yul\":2177:2270   */\n      tag_40\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2295:2297   */\n      0x40\n        /* \"#utility.yul\":2290:2293   */\n      dup3\n        /* \"#utility.yul\":2286:2298   */\n      add\n        /* \"#utility.yul\":2279:2298   */\n      swap1\n      pop\n        /* \"#utility.yul\":1938:2304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2729   */\n    tag_24:\n        /* \"#utility.yul\":2476:2480   */\n      0x00\n        /* \"#utility.yul\":2514:2516   */\n      0x20\n        /* \"#utility.yul\":2503:2512   */\n      dup3\n        /* \"#utility.yul\":2499:2517   */\n      add\n        /* \"#utility.yul\":2491:2517   */\n      swap1\n      pop\n        /* \"#utility.yul\":2563:2572   */\n      dup2\n        /* \"#utility.yul\":2557:2561   */\n      dup2\n        /* \"#utility.yul\":2553:2573   */\n      sub\n        /* \"#utility.yul\":2549:2550   */\n      0x00\n        /* \"#utility.yul\":2538:2547   */\n      dup4\n        /* \"#utility.yul\":2534:2551   */\n      add\n        /* \"#utility.yul\":2527:2574   */\n      mstore\n        /* \"#utility.yul\":2591:2722   */\n      tag_68\n        /* \"#utility.yul\":2717:2721   */\n      dup2\n        /* \"#utility.yul\":2591:2722   */\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2583:2722   */\n      swap1\n      pop\n        /* \"#utility.yul\":2310:2729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:2915   */\n    tag_30:\n        /* \"#utility.yul\":2783:2860   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2773:2861   */\n      mstore\n        /* \"#utility.yul\":2880:2884   */\n      0x01\n        /* \"#utility.yul\":2877:2878   */\n      0x04\n        /* \"#utility.yul\":2870:2885   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa2646970667358221220a9c3b65ebafb74ba34b2ce90f477bb114ec22fc80d11566536a9964c20fc956864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104c78061005b5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c806378320aca1461004e5780638da5cb5b1461006a578063f5a1f5b414610088578063f5af5f95146100a4575b5f80fd5b61006860048036038101906100639190610373565b6100c0565b005b61007261018f565b60405161007f91906103ad565b60405180910390f35b6100a2600480360381019061009d9190610373565b6101b2565b005b6100be60048036038101906100b99190610373565b610278565b005b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461014d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490610446565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610236576040517fade643ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d3576102d2610464565b5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61034282610319565b9050919050565b61035281610338565b811461035c575f80fd5b50565b5f8135905061036d81610349565b92915050565b5f6020828403121561038857610387610315565b5b5f6103958482850161035f565b91505092915050565b6103a781610338565b82525050565b5f6020820190506103c05f83018461039e565b92915050565b5f82825260208201905092915050565b7f536574206e6577206f776e6572206661696c65642c2063757272656e74206e6f5f8201527f74206973206f776e657200000000000000000000000000000000000000000000602082015250565b5f610430602a836103c6565b915061043b826103d6565b604082019050919050565b5f6020820190508181035f83015261045d81610424565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffdfea2646970667358221220a9c3b65ebafb74ba34b2ce90f477bb114ec22fc80d11566536a9964c20fc956864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x4C7 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78320ACA EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xF5A1F5B4 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xF5AF5F95 EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH32 0xADE643AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D3 JUMPI PUSH2 0x2D2 PUSH2 0x464 JUMP JUMPDEST JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x342 DUP3 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP2 EQ PUSH2 0x35C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36D DUP2 PUSH2 0x349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x388 JUMPI PUSH2 0x387 PUSH2 0x315 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x395 DUP5 DUP3 DUP6 ADD PUSH2 0x35F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A7 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x39E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536574206E6577206F776E6572206661696C65642C2063757272656E74206E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x74206973206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x430 PUSH1 0x2A DUP4 PUSH2 0x3C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x43B DUP3 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x45D DUP2 PUSH2 0x424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xC3 0xB6 MCOPY 0xBA 0xFB PUSH21 0xBA34B2CE90F477BB114EC22FC80D11566536A9964C KECCAK256 0xFC SWAP6 PUSH9 0x64736F6C6343000819 STOP CALLER ",
							"sourceMap": "179:593:0:-:0;;;232:50;;;;;;;;;;264:10;256:5;;:18;;;;;;;;;;;;;;;;;;179:593;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_5": {
									"entryPoint": 399,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNewOwner1_51": {
									"entryPoint": 192,
									"id": 51,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNewOwner2_68": {
									"entryPoint": 632,
									"id": 68,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNewOwner_33": {
									"entryPoint": 434,
									"id": 33,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2918:1",
										"nodeType": "YulBlock",
										"src": "0:2918:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1241:53:1",
													"nodeType": "YulBlock",
													"src": "1241:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1258:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1263:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:1"
																		},
																		"nativeSrc": "1263:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:1"
																},
																"nativeSrc": "1251:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1251:37:1"
															},
															"nativeSrc": "1251:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1176:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:1",
														"nodeType": "YulTypedName",
														"src": "1229:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1236:3:1",
														"nodeType": "YulTypedName",
														"src": "1236:3:1",
														"type": ""
													}
												],
												"src": "1176:118:1"
											},
											{
												"body": {
													"nativeSrc": "1398:124:1",
													"nodeType": "YulBlock",
													"src": "1398:124:1",
													"statements": [
														{
															"nativeSrc": "1408:26:1",
															"nodeType": "YulAssignment",
															"src": "1408:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1420:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1431:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1416:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:1"
																},
																"nativeSrc": "1416:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1416:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1408:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1488:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1501:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1512:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1444:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:1"
																},
																"nativeSrc": "1444:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1444:71:1"
															},
															"nativeSrc": "1444:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1300:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1370:9:1",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1382:6:1",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1393:4:1",
														"nodeType": "YulTypedName",
														"src": "1393:4:1",
														"type": ""
													}
												],
												"src": "1300:222:1"
											},
											{
												"body": {
													"nativeSrc": "1624:73:1",
													"nodeType": "YulBlock",
													"src": "1624:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1646:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:1"
																},
																"nativeSrc": "1634:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1634:19:1"
															},
															"nativeSrc": "1634:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:1"
														},
														{
															"nativeSrc": "1662:29:1",
															"nodeType": "YulAssignment",
															"src": "1662:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1681:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1686:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1677:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:1"
																},
																"nativeSrc": "1677:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1677:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1662:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1528:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1596:3:1",
														"nodeType": "YulTypedName",
														"src": "1596:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1601:6:1",
														"nodeType": "YulTypedName",
														"src": "1601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1612:11:1",
														"nodeType": "YulTypedName",
														"src": "1612:11:1",
														"type": ""
													}
												],
												"src": "1528:169:1"
											},
											{
												"body": {
													"nativeSrc": "1809:123:1",
													"nodeType": "YulBlock",
													"src": "1809:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1831:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1839:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nativeSrc": "1827:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:1"
																	},
																	{
																		"hexValue": "536574206e6577206f776e6572206661696c65642c2063757272656e74206e6f",
																		"kind": "string",
																		"nativeSrc": "1843:34:1",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:1",
																		"type": "",
																		"value": "Set new owner failed, current no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1820:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:1"
																},
																"nativeSrc": "1820:58:1",
																"nodeType": "YulFunctionCall",
																"src": "1820:58:1"
															},
															"nativeSrc": "1820:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1899:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1907:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1907:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:1"
																		},
																		"nativeSrc": "1895:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1895:15:1"
																	},
																	{
																		"hexValue": "74206973206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1912:12:1",
																		"nodeType": "YulLiteral",
																		"src": "1912:12:1",
																		"type": "",
																		"value": "t is owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1888:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:1"
																},
																"nativeSrc": "1888:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1888:37:1"
															},
															"nativeSrc": "1888:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1888:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55",
												"nativeSrc": "1703:229:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1801:6:1",
														"nodeType": "YulTypedName",
														"src": "1801:6:1",
														"type": ""
													}
												],
												"src": "1703:229:1"
											},
											{
												"body": {
													"nativeSrc": "2084:220:1",
													"nodeType": "YulBlock",
													"src": "2084:220:1",
													"statements": [
														{
															"nativeSrc": "2094:74:1",
															"nodeType": "YulAssignment",
															"src": "2094:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2160:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2160:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2165:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2101:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2101:58:1"
																},
																"nativeSrc": "2101:67:1",
																"nodeType": "YulFunctionCall",
																"src": "2101:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2094:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2266:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2266:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55",
																	"nativeSrc": "2177:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2177:88:1"
																},
																"nativeSrc": "2177:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2177:93:1"
															},
															"nativeSrc": "2177:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2177:93:1"
														},
														{
															"nativeSrc": "2279:19:1",
															"nodeType": "YulAssignment",
															"src": "2279:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2290:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2290:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2295:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2295:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2286:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2286:3:1"
																},
																"nativeSrc": "2286:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2286:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2279:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2279:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1938:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2072:3:1",
														"nodeType": "YulTypedName",
														"src": "2072:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2080:3:1",
														"nodeType": "YulTypedName",
														"src": "2080:3:1",
														"type": ""
													}
												],
												"src": "1938:366:1"
											},
											{
												"body": {
													"nativeSrc": "2481:248:1",
													"nodeType": "YulBlock",
													"src": "2481:248:1",
													"statements": [
														{
															"nativeSrc": "2491:26:1",
															"nodeType": "YulAssignment",
															"src": "2491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2499:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2499:3:1"
																},
																"nativeSrc": "2499:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2491:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2538:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2549:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2549:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2534:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:1"
																		},
																		"nativeSrc": "2534:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2534:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2557:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2557:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2563:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2553:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:1"
																		},
																		"nativeSrc": "2553:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2553:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2527:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:1"
																},
																"nativeSrc": "2527:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2527:47:1"
															},
															"nativeSrc": "2527:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2527:47:1"
														},
														{
															"nativeSrc": "2583:139:1",
															"nodeType": "YulAssignment",
															"src": "2583:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2717:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2717:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2591:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2591:124:1"
																},
																"nativeSrc": "2591:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2591:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2583:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2583:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2310:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2461:9:1",
														"nodeType": "YulTypedName",
														"src": "2461:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2476:4:1",
														"nodeType": "YulTypedName",
														"src": "2476:4:1",
														"type": ""
													}
												],
												"src": "2310:419:1"
											},
											{
												"body": {
													"nativeSrc": "2763:152:1",
													"nodeType": "YulBlock",
													"src": "2763:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2780:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2783:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2783:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2773:6:1"
																},
																"nativeSrc": "2773:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2773:88:1"
															},
															"nativeSrc": "2773:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2773:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2877:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2880:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2880:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2870:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:1"
																},
																"nativeSrc": "2870:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2870:15:1"
															},
															"nativeSrc": "2870:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2870:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2901:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2901:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2904:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2904:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:1"
																},
																"nativeSrc": "2894:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2894:15:1"
															},
															"nativeSrc": "2894:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2894:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "2735:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55(memPtr) {\n\n        mstore(add(memPtr, 0), \"Set new owner failed, current no\")\n\n        mstore(add(memPtr, 32), \"t is owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c806378320aca1461004e5780638da5cb5b1461006a578063f5a1f5b414610088578063f5af5f95146100a4575b5f80fd5b61006860048036038101906100639190610373565b6100c0565b005b61007261018f565b60405161007f91906103ad565b60405180910390f35b6100a2600480360381019061009d9190610373565b6101b2565b005b6100be60048036038101906100b99190610373565b610278565b005b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461014d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490610446565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610236576040517fade643ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d3576102d2610464565b5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61034282610319565b9050919050565b61035281610338565b811461035c575f80fd5b50565b5f8135905061036d81610349565b92915050565b5f6020828403121561038857610387610315565b5b5f6103958482850161035f565b91505092915050565b6103a781610338565b82525050565b5f6020820190506103c05f83018461039e565b92915050565b5f82825260208201905092915050565b7f536574206e6577206f776e6572206661696c65642c2063757272656e74206e6f5f8201527f74206973206f776e657200000000000000000000000000000000000000000000602082015250565b5f610430602a836103c6565b915061043b826103d6565b604082019050919050565b5f6020820190508181035f83015261045d81610424565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffdfea2646970667358221220a9c3b65ebafb74ba34b2ce90f477bb114ec22fc80d11566536a9964c20fc956864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78320ACA EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xF5A1F5B4 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xF5AF5F95 EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH32 0xADE643AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D3 JUMPI PUSH2 0x2D2 PUSH2 0x464 JUMP JUMPDEST JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x342 DUP3 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP2 EQ PUSH2 0x35C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36D DUP2 PUSH2 0x349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x388 JUMPI PUSH2 0x387 PUSH2 0x315 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x395 DUP5 DUP3 DUP6 ADD PUSH2 0x35F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A7 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x39E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536574206E6577206F776E6572206661696C65642C2063757272656E74206E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x74206973206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x430 PUSH1 0x2A DUP4 PUSH2 0x3C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x43B DUP3 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x45D DUP2 PUSH2 0x424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xC3 0xB6 MCOPY 0xBA 0xFB PUSH21 0xBA34B2CE90F477BB114EC22FC80D11566536A9964C KECCAK256 0xFC SWAP6 PUSH9 0x64736F6C6343000819 STOP CALLER ",
							"sourceMap": "179:593:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;486:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;203:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;322:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;655:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;486:161;557:10;548:19;;:5;;;;;;;;;;:19;;;540:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;635:4;627:5;;:12;;;;;;;;;;;;;;;;;;486:161;:::o;203:20::-;;;;;;;;;;;;:::o;322:156::-;387:10;378:19;;:5;;;;;;;;;;:19;;;375:71;;421:13;;;;;;;;;;;;;;375:71;466:4;458:5;;:12;;;;;;;;;;;;;;;;;;322:156;:::o;655:114::-;725:10;716:19;;:5;;;;;;;;;;:19;;;709:27;;;;:::i;:::-;;757:4;749:5;;:12;;;;;;;;;;;;;;;;;;655:114;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:229::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:12;1907:2;1899:6;1895:15;1888:37;1703:229;:::o;1938:366::-;2080:3;2101:67;2165:2;2160:3;2101:67;:::i;:::-;2094:74;;2177:93;2266:3;2177:93;:::i;:::-;2295:2;2290:3;2286:12;2279:19;;1938:366;;;:::o;2310:419::-;2476:4;2514:2;2503:9;2499:18;2491:26;;2563:9;2557:4;2553:20;2549:1;2538:9;2534:17;2527:47;2591:131;2717:4;2591:131;:::i;:::-;2583:139;;2310:419;;;:::o;2735:180::-;2783:77;2780:1;2773:88;2880:4;2877:1;2870:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "244600",
								"executionCost": "24550",
								"totalCost": "269150"
							},
							"external": {
								"owner()": "2505",
								"setNewOwner(address)": "26903",
								"setNewOwner1(address)": "26859",
								"setNewOwner2(address)": "26925"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 179,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 179,
									"end": 772,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 232,
									"end": 282,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 232,
									"end": 282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 282,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 232,
									"end": 282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 282,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 232,
									"end": 282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 282,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 232,
									"end": 282,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 282,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 232,
									"end": 282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 264,
									"end": 274,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 256,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 256,
									"end": 274,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 256,
									"end": 274,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 256,
									"end": 274,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 256,
									"end": 274,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 179,
									"end": 772,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 772,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 772,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 772,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 772,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9c3b65ebafb74ba34b2ce90f477bb114ec22fc80d11566536a9964c20fc956864736f6c63430008190033",
									".code": [
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "78320ACA"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "F5A1F5B4"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "F5AF5F95"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 486,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 486,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 486,
											"end": 647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 486,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 486,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 486,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 486,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 203,
											"end": 223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 203,
											"end": 223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 322,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 322,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 322,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 322,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 322,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 322,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 322,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 655,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 655,
											"end": 769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 655,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 655,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 655,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 486,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 567,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 548,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 548,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 548,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 548,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 548,
											"end": 567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 540,
											"end": 614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 540,
											"end": 614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 540,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 540,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 540,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 540,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 540,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 627,
											"end": 639,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 639,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 627,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 486,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 203,
											"end": 223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 322,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 387,
											"end": 397,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 378,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 378,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 378,
											"end": 397,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 375,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 375,
											"end": 446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "ADE643AD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 421,
											"end": 434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 434,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 375,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 375,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 735,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 716,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 716,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 709,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 709,
											"end": 736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 709,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 709,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 709,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 709,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 709,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 757,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 749,
											"end": 761,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "536574206E6577206F776E6572206661696C65642C2063757272656E74206E6F"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH",
											"source": 1,
											"value": "74206973206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 2160,
											"end": 2163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2101,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2266,
											"end": 2269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2717,
											"end": 2721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2591,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2860,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"wtfSolidity/101/101_15/err.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"setNewOwner(address)": "f5a1f5b4",
							"setNewOwner1(address)": "78320aca",
							"setNewOwner2(address)": "f5af5f95"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SetNotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setNewOwner1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setNewOwner2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wtfSolidity/101/101_15/err.sol\":\"ErrTest\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"wtfSolidity/101/101_15/err.sol\":{\"keccak256\":\"0x201bac838178bc638ed6e2a76237855bfd080176206b717132319672e4101d50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5114bd190cc23eec631c81fce6e51b535a20f89c82fbc806f25238c3743e25e1\",\"dweb:/ipfs/Qmeuw5NeeBXL5TbriSiUvtcwmJCsRqCsqtw3BFbMK1zAmx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "wtfSolidity/101/101_15/err.sol:ErrTest",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"wtfSolidity/101/101_15/err.sol": {
				"ast": {
					"absolutePath": "wtfSolidity/101/101_15/err.sol",
					"exportedSymbols": {
						"ErrTest": [
							69
						],
						"SetNotOwner": [
							3
						]
					},
					"id": 70,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"errorSelector": "ade643ad",
							"id": 3,
							"name": "SetNotOwner",
							"nameLocation": "66:11:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 2,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "77:2:0"
							},
							"src": "60:20:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ErrTest",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 69,
							"linearizedBaseContracts": [
								69
							],
							"name": "ErrTest",
							"nameLocation": "188:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 5,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "218:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 69,
									"src": "203:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "245:37:0",
										"statements": [
											{
												"expression": {
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "256:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 9,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "264:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "268:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "264:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "256:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "256:18:0"
											}
										]
									},
									"id": 14,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:0"
									},
									"scope": 69,
									"src": "232:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "364:114:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 19,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "378:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 20,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "387:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "391:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "387:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "378:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "IfStatement",
												"src": "375:71:0",
												"trueBody": {
													"id": 26,
													"nodeType": "Block",
													"src": "399:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 23,
																	"name": "SetNotOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "421:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "421:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 25,
															"nodeType": "RevertStatement",
															"src": "414:20:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "458:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "466:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "458:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "458:12:0"
											}
										]
									},
									"functionSelector": "f5a1f5b4",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setNewOwner",
									"nameLocation": "331:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "343:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:14:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:0:0"
									},
									"scope": 69,
									"src": "322:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "529:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 39,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "548:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 40,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "557:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "561:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "557:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "548:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536574206e6577206f776e6572206661696c65642c2063757272656e74206e6f74206973206f776e6572",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "569:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55",
																"typeString": "literal_string \"Set new owner failed, current not is owner\""
															},
															"value": "Set new owner failed, current not is owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c3f8c6741a59cc801a1a6110135b87c11bbfd5a1e004e914304444576a14a55",
																"typeString": "literal_string \"Set new owner failed, current not is owner\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "540:74:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "627:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 47,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "635:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "627:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "627:12:0"
											}
										]
									},
									"functionSelector": "78320aca",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setNewOwner1",
									"nameLocation": "495:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "516:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "508:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:14:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:0:0"
									},
									"scope": 69,
									"src": "486:161:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "698:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "716:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 58,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "725:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "729:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "725:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "716:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 56,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "709:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "709:27:0"
											},
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "749:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 64,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "757:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "749:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "749:12:0"
											}
										]
									},
									"functionSelector": "f5af5f95",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setNewOwner2",
									"nameLocation": "664:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:14:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:0"
									},
									"scope": 69,
									"src": "655:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 70,
							"src": "179:593:0",
							"usedErrors": [
								3
							],
							"usedEvents": []
						}
					],
					"src": "33:739:0"
				},
				"id": 0
			}
		}
	}
}